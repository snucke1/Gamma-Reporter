name: Collect SPX Gamma Exposure (30-min)

on:
  # UTC schedule. We also guard with a market-open check in the job.
  schedule:
    - cron: '30 13 * * 1-5'      # 13:30 UTC ~ US cash open (EDT)
    - cron: '0,30 14-20 * * 1-5' # 14:00â€“20:30 UTC
    - cron: '0,30 21 * * 1-5'    # 21:00 UTC (handles EST overlap)
  workflow_dispatch:             # manual run if needed

permissions:
  contents: write                # allow commits from this workflow

env:
  INDEX: SPX                     # change to e.g. SPX, SPY, QQQ if desired

jobs:
  collect:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # gamma_reporter imports these at module import time:
          pip install numpy pandas scipy matplotlib python-dateutil requests
          # For calendar/Parquet and scheduling logic
          pip install pandas_market_calendars pyarrow

      - name: Compute market-open (NYSE) safely
        id: nyse
        run: |
          python - << 'PY'
          import os, datetime
          import pandas_market_calendars as mcal

          now = datetime.datetime.now(datetime.timezone.utc)
          cal = mcal.get_calendar('XNYS')  # NYSE
          # Use a small window so weekends/holidays don't raise
          start = (now - datetime.timedelta(days=1)).date()
          end   = (now + datetime.timedelta(days=1)).date()
          sched = cal.schedule(start_date=start, end_date=end)

          is_open = False
          if not sched.empty:
            try:
              is_open = cal.open_at_time(sched, now)
            except Exception:
              is_open = False

          print(f"UTC now: {now.isoformat()} | NYSE open: {is_open}")
          with open(os.environ['GITHUB_OUTPUT'], 'a') as fh:
            fh.write(f"is_open={'true' if is_open else 'false'}\n")
          PY

      - name: Collect & save snapshot
        if: steps.nyse.outputs.is_open == 'true'
        env:
          INDEX: ${{ env.INDEX }}
        run: |
          mkdir -p scripts data/intraday
          # Run the collector using your gamma_reporter helpers
          python scripts/collector.py --index "$INDEX" --out snapshot.json

          # Store timestamped JSON
          mkdir -p data/intraday/$(date -u +'%Y-%m-%d')
          ts=$(date -u +'%Y-%m-%dT%H%M%SZ')
          cp snapshot.json data/intraday/$(date -u +'%Y-%m-%d')/${ts}.json

          # Append to an intraday Parquet for analysis
          python - << 'PY'
          import json, pandas as pd, pyarrow as pa, pyarrow.parquet as pq, pathlib
          snap = json.load(open("snapshot.json"))
          df = pd.DataFrame([snap])
          out = pathlib.Path("data") / "intraday" / "gex_intraday.parquet"
          if out.exists():
              old = pq.read_table(out)
              new = pa.Table.from_pandas(df)
              pq.write_table(pa.concat_tables([old, new]), out)
          else:
              pq.write_table(pa.Table.from_pandas(df), out)
          PY

      - name: Commit & push data
        if: steps.nyse.outputs.is_open == 'true'
        run: |
          git config user.name  "github-actions"
          git config user.email "github-actions@github.com"
          git add data/
          git commit -m "GEX snapshot $(date -u +'%Y-%m-%d %H:%MZ')" || echo "No changes"
          git pull --rebase origin ${{ github.ref_name }} || true
          git push
